# Reusable Package Workflow
name: _Package

on:
  workflow_call:
    inputs:
      nightly:
        type: boolean
        default: false
        required: false
        description: 'Publish a nightly build'
    outputs:
      version:
        value: ${{ jobs.package.outputs.version }}
        description: 'Version of the packaged extension'
      nightly:
        value: ${{ jobs.package.outputs.nightly }}
        description: 'Whether the packaged extension is a nightly build'

jobs:
  package:
    name: Package
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Restore compiled extension from cache
        uses: actions/cache/restore@v3
        with:
          path: out/
          key: compiled-extension-${{ github.sha }}

      - name: Setup
        uses: ./.github/actions/setup

      - name: Replace name in package.json (nightly)
        if: ${{ github.event.inputs.nightly == 'true' }}
        run: |
          tempfile=$(mktemp)
          jq '.name = "biome-nightly"' package.json > $tempfile
          mv $tempfile package.json
        
      - name: Replace displayName in package.json (nightly)
        if: ${{ github.event.inputs.nightly == 'true' }}
        run: |
          tempfile=$(mktemp)
          jq '.displayName = "Biome (nightly)"' package.json > $tempfile
          mv $tempfile package.json
      
      - name: Mark nightly build as preview in package.json
        if: ${{ github.event.inputs.nightly == 'true' }}
        run: |
          tempfile=$(mktemp)
          jq '.preview = true' package.json > $tempfile
          mv $tempfile package.json

      - name: Generate nightly version identifier (nightly)
        if: ${{ github.event.inputs.nightly == 'true' }}
        id: nightly-version
        run: echo "version=$(date +'%Y.%-m.%-d%-H%-M')" >> "$GITHUB_OUTPUT"
    
      - name: Replace version in package.json (nightly)
        if: ${{ github.event.inputs.nightly == 'true' }}
        run: |
          tempfile=$(mktemp)
          jq --arg version "${{ steps.nightly-version.outputs.version }}" '.version = $version' package.json > $tempfile
          mv $tempfile package.json

      - name: Read version from package.json
        id: version
        run: echo "version=$(jq -r '.version' package.json)" >> "$GITHUB_OUTPUT"

      - name: Package the extension
        run: pnpm exec vsce package -o biome.vsix

      - name: Upload the artifact
        uses: actions/upload-artifact@v4
        with:
          name: biome.vsix
          path: biome.vsix

    outputs:
      version: ${{ steps.version.outputs.version }}
      nightly: ${{ github.event.inputs.nightly == 'true' }}